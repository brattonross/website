/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
	box-sizing: border-box;
	/* 1 */
	border-width: 0;
	/* 2 */
	border-style: solid;
	/* 2 */
	border-color: #e5e7eb;
	/* 2 */
}

::before,
::after {
	--tw-content: "";
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
	line-height: 1.5;
	/* 1 */
	-webkit-text-size-adjust: 100%;
	/* 2 */
	-moz-tab-size: 4;
	/* 3 */
	-o-tab-size: 4;
	tab-size: 4;
	/* 3 */
	font-family:
		Atkinson Hyperlegible,
		ui-sans-serif,
		system-ui,
		-apple-system,
		BlinkMacSystemFont,
		"Segoe UI",
		Roboto,
		"Helvetica Neue",
		Arial,
		"Noto Sans",
		sans-serif,
		"Apple Color Emoji",
		"Segoe UI Emoji",
		"Segoe UI Symbol",
		"Noto Color Emoji";
	/* 4 */
	font-feature-settings: normal;
	/* 5 */
	font-variation-settings: normal;
	/* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
	margin: 0;
	/* 1 */
	line-height: inherit;
	/* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
	height: 0;
	/* 1 */
	color: inherit;
	/* 2 */
	border-top-width: 1px;
	/* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
	color: inherit;
	text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
		"Liberation Mono", "Courier New", monospace;
	/* 1 */
	font-size: 1em;
	/* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
	text-indent: 0;
	/* 1 */
	border-color: inherit;
	/* 2 */
	border-collapse: collapse;
	/* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit;
	/* 1 */
	font-feature-settings: inherit;
	/* 1 */
	font-variation-settings: inherit;
	/* 1 */
	font-size: 100%;
	/* 1 */
	font-weight: inherit;
	/* 1 */
	line-height: inherit;
	/* 1 */
	color: inherit;
	/* 1 */
	margin: 0;
	/* 2 */
	padding: 0;
	/* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
	text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type="button"],
[type="reset"],
[type="submit"] {
	-webkit-appearance: button;
	/* 1 */
	background-color: transparent;
	/* 2 */
	background-image: none;
	/* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
	outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type="search"] {
	-webkit-appearance: textfield;
	/* 1 */
	outline-offset: -2px;
	/* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button;
	/* 1 */
	font: inherit;
	/* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
	margin: 0;
}

fieldset {
	margin: 0;
	padding: 0;
}

legend {
	padding: 0;
}

ol,
ul,
menu {
	list-style: none;
	margin: 0;
	padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
	padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
	resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
	opacity: 1;
	/* 1 */
	color: #9ca3af;
	/* 2 */
}

input::placeholder,
textarea::placeholder {
	opacity: 1;
	/* 1 */
	color: #9ca3af;
	/* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
	cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
	cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
	display: block;
	/* 1 */
	vertical-align: middle;
	/* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
	max-width: 100%;
	height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
	display: none;
}

:root {
	--grass1: 116deg 50% 98.9%;
	--grass2: 120deg 60% 97.1%;
	--grass3: 120deg 53.6% 94.8%;
	--grass4: 121deg 47.5% 91.4%;
	--grass5: 122deg 42.6% 86.5%;
	--grass6: 124deg 39% 79.7%;
	--grass7: 126deg 37.1% 70.2%;
	--grass8: 131deg 38.1% 56.3%;
	--grass9: 131deg 41% 46.5%;
	--grass10: 132deg 43.1% 42.2%;
	--grass11: 133deg 50% 32.5%;
	--grass12: 130deg 30% 14.9%;
	--sage1: 155deg 30% 98.8%;
	--sage2: 150deg 16.7% 97.6%;
	--sage3: 151deg 10.6% 95.2%;
	--sage4: 151deg 8.8% 93%;
	--sage5: 151deg 7.8% 90.8%;
	--sage6: 152deg 7.2% 88.4%;
	--sage7: 153deg 6.7% 85.3%;
	--sage8: 154deg 6.1% 77.5%;
	--sage9: 155deg 3.5% 55.5%;
	--sage10: 154deg 2.8% 51.7%;
	--sage11: 155deg 3% 43%;
	--sage12: 155deg 24% 9%;
	--sand1: 50deg 20% 99%;
	--sand2: 60deg 7.7% 97.5%;
	--sand3: 59deg 6.5% 95.1%;
	--sand4: 58deg 6.1% 92.9%;
	--sand5: 57deg 6% 90.7%;
	--sand6: 56deg 5.9% 88.4%;
	--sand7: 55deg 5.9% 85.2%;
	--sand8: 51deg 6% 77.1%;
	--sand9: 50deg 2% 55.7%;
	--sand10: 55deg 1.7% 51.9%;
	--sand11: 50deg 2% 43.1%;
	--sand12: 50deg 6% 10%;
}

.dark {
	--grass1: 146deg 30% 7.4%;
	--grass2: 136deg 33.3% 8.8%;
	--grass3: 137deg 36% 11.4%;
	--grass4: 137deg 37.6% 13.7%;
	--grass5: 136deg 38.7% 16%;
	--grass6: 135deg 39.6% 19.1%;
	--grass7: 134deg 40.3% 23.8%;
	--grass8: 131deg 40.1% 30.8%;
	--grass9: 131deg 41% 46.5%;
	--grass10: 131deg 39% 52.1%;
	--grass11: 131deg 43% 57.2%;
	--grass12: 137deg 72% 94%;
	--sage1: 155deg 7% 8.4%;
	--sage2: 150deg 7.4% 10.6%;
	--sage3: 150deg 6.7% 13.1%;
	--sage4: 150deg 6.4% 15.3%;
	--sage5: 150deg 6.1% 17.4%;
	--sage6: 150deg 5.8% 19.9%;
	--sage7: 150deg 5.5% 23.6%;
	--sage8: 150deg 5.1% 30.6%;
	--sage9: 155deg 6% 42.5%;
	--sage10: 153deg 4.8% 48.2%;
	--sage11: 155deg 5% 61.8%;
	--sage12: 155deg 6% 93%;
	--sand1: 61deg 2% 8.3%;
	--sand2: 60deg 3.7% 10.6%;
	--sand3: 58deg 3.7% 13.1%;
	--sand4: 57deg 3.6% 15.3%;
	--sand5: 56deg 3.7% 17.4%;
	--sand6: 55deg 3.7% 19.9%;
	--sand7: 53deg 3.7% 23.6%;
	--sand8: 50deg 3.8% 30.6%;
	--sand9: 50deg 4% 42.7%;
	--sand10: 52deg 3.1% 48.3%;
	--sand11: 50deg 4% 61.8%;
	--sand12: 56deg 4% 92.8%;
}

*,
::before,
::after {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x:  ;
	--tw-pan-y:  ;
	--tw-pinch-zoom:  ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position:  ;
	--tw-gradient-via-position:  ;
	--tw-gradient-to-position:  ;
	--tw-ordinal:  ;
	--tw-slashed-zero:  ;
	--tw-numeric-figure:  ;
	--tw-numeric-spacing:  ;
	--tw-numeric-fraction:  ;
	--tw-ring-inset:  ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur:  ;
	--tw-brightness:  ;
	--tw-contrast:  ;
	--tw-grayscale:  ;
	--tw-hue-rotate:  ;
	--tw-invert:  ;
	--tw-saturate:  ;
	--tw-sepia:  ;
	--tw-drop-shadow:  ;
	--tw-backdrop-blur:  ;
	--tw-backdrop-brightness:  ;
	--tw-backdrop-contrast:  ;
	--tw-backdrop-grayscale:  ;
	--tw-backdrop-hue-rotate:  ;
	--tw-backdrop-invert:  ;
	--tw-backdrop-opacity:  ;
	--tw-backdrop-saturate:  ;
	--tw-backdrop-sepia:  ;
}

::backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x:  ;
	--tw-pan-y:  ;
	--tw-pinch-zoom:  ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position:  ;
	--tw-gradient-via-position:  ;
	--tw-gradient-to-position:  ;
	--tw-ordinal:  ;
	--tw-slashed-zero:  ;
	--tw-numeric-figure:  ;
	--tw-numeric-spacing:  ;
	--tw-numeric-fraction:  ;
	--tw-ring-inset:  ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur:  ;
	--tw-brightness:  ;
	--tw-contrast:  ;
	--tw-grayscale:  ;
	--tw-hue-rotate:  ;
	--tw-invert:  ;
	--tw-saturate:  ;
	--tw-sepia:  ;
	--tw-drop-shadow:  ;
	--tw-backdrop-blur:  ;
	--tw-backdrop-brightness:  ;
	--tw-backdrop-contrast:  ;
	--tw-backdrop-grayscale:  ;
	--tw-backdrop-hue-rotate:  ;
	--tw-backdrop-invert:  ;
	--tw-backdrop-opacity:  ;
	--tw-backdrop-saturate:  ;
	--tw-backdrop-sepia:  ;
}

.prose {
	color: var(--tw-prose-body);
	max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
	margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin-top: 1.2em;
	margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-links);
	text-decoration: underline;
	font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-bold);
	font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
	list-style-type: decimal;
	margin-top: 1.25em;
	margin-bottom: 1.25em;
	padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
	list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
	list-style-type: disc;
	margin-top: 1.25em;
	margin-bottom: 1.25em;
	padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
	font-weight: 400;
	color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
	color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
	border-color: var(--tw-prose-hr);
	border-top-width: 1px;
	margin-top: 3em;
	margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
	font-weight: 500;
	font-style: italic;
	color: var(--tw-prose-quotes);
	border-left-width: 0.25rem;
	border-left-color: var(--tw-prose-quote-borders);
	quotes: "\201C" "\201D" "\2018" "\2019";
	margin-top: 1.6em;
	margin-bottom: 1.6em;
	padding-left: 1em;
}

.prose
	:where(blockquote p:first-of-type):not(
		:where([class~="not-prose"] *)
	)::before {
	content: open-quote;
}

.prose
	:where(blockquote p:last-of-type):not(
		:where([class~="not-prose"] *)
	)::after {
	content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 800;
	font-size: 2.25em;
	margin-top: 0;
	margin-bottom: 0.8888889em;
	line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 900;
	color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 700;
	font-size: 1.5em;
	margin-top: 2em;
	margin-bottom: 1em;
	line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 800;
	color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	font-size: 1.25em;
	margin-top: 1.6em;
	margin-bottom: 0.6em;
	line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 700;
	color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	margin-top: 1.5em;
	margin-bottom: 0.5em;
	line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 700;
	color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-captions);
	font-size: 0.875em;
	line-height: 1.4285714;
	margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-code);
	font-weight: 600;
	font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
	content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
	content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
	color: inherit;
	font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
	color: inherit;
	font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
	color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-pre-code);
	background-color: var(--tw-prose-pre-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: 0.875em;
	line-height: 1.7142857;
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
	border-radius: 0.375rem;
	padding-top: 0.8571429em;
	padding-right: 1.1428571em;
	padding-bottom: 0.8571429em;
	padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
	background-color: transparent;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-weight: inherit;
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
	content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
	content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
	width: 100%;
	table-layout: auto;
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	font-size: 0.875em;
	line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	vertical-align: bottom;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
	vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
	border-top-width: 1px;
	border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
	vertical-align: top;
}

.prose {
	--tw-prose-body: #374151;
	--tw-prose-headings: #111827;
	--tw-prose-lead: #4b5563;
	--tw-prose-links: #111827;
	--tw-prose-bold: #111827;
	--tw-prose-counters: #6b7280;
	--tw-prose-bullets: #d1d5db;
	--tw-prose-hr: #e5e7eb;
	--tw-prose-quotes: #111827;
	--tw-prose-quote-borders: #e5e7eb;
	--tw-prose-captions: #6b7280;
	--tw-prose-code: #111827;
	--tw-prose-pre-code: #e5e7eb;
	--tw-prose-pre-bg: #1f2937;
	--tw-prose-th-borders: #d1d5db;
	--tw-prose-td-borders: #e5e7eb;
	--tw-prose-invert-body: #d1d5db;
	--tw-prose-invert-headings: #fff;
	--tw-prose-invert-lead: #9ca3af;
	--tw-prose-invert-links: #fff;
	--tw-prose-invert-bold: #fff;
	--tw-prose-invert-counters: #9ca3af;
	--tw-prose-invert-bullets: #4b5563;
	--tw-prose-invert-hr: #374151;
	--tw-prose-invert-quotes: #f3f4f6;
	--tw-prose-invert-quote-borders: #374151;
	--tw-prose-invert-captions: #9ca3af;
	--tw-prose-invert-code: #fff;
	--tw-prose-invert-pre-code: #d1d5db;
	--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
	--tw-prose-invert-th-borders: #4b5563;
	--tw-prose-invert-td-borders: #374151;
	font-size: 1rem;
	line-height: 1.75;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}

.prose
	:where(.prose > ul > li > *:first-child):not(
		:where([class~="not-prose"] *)
	) {
	margin-top: 1.25em;
}

.prose
	:where(.prose > ul > li > *:last-child):not(
		:where([class~="not-prose"] *)
	) {
	margin-bottom: 1.25em;
}

.prose
	:where(.prose > ol > li > *:first-child):not(
		:where([class~="not-prose"] *)
	) {
	margin-top: 1.25em;
}

.prose
	:where(.prose > ol > li > *:last-child):not(
		:where([class~="not-prose"] *)
	) {
	margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
	padding-top: 0.5714286em;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}

.prose
	:where(tbody td:first-child, tfoot td:first-child):not(
		:where([class~="not-prose"] *)
	) {
	padding-left: 0;
}

.prose
	:where(tbody td:last-child, tfoot td:last-child):not(
		:where([class~="not-prose"] *)
	) {
	padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 0;
}

.prose-sage {
	--tw-prose-body: hsl(var(--sage12) / 1);
	--tw-prose-headings: hsl(var(--sage12) / 1);
	--tw-prose-lead: hsl(var(--sage11) / 1);
	--tw-prose-links: hsl(var(--sage12) / 1);
	--tw-prose-bold: hsl(var(--sage12) / 1);
	--tw-prose-counters: hsl(var(--sage11) / 1);
	--tw-prose-bullets: hsl(var(--sage7) / 1);
	--tw-prose-hr: hsl(var(--sage6) / 1);
	--tw-prose-quotes: hsl(var(--sage12) / 1);
	--tw-prose-quote-borders: hsl(var(--sage6) / 1);
	--tw-prose-captions: hsl(var(--sage11) / 1);
	--tw-prose-code: hsl(var(--sage12) / 1);
	--tw-prose-pre-code: hsl(var(--sage12) / 1);
	--tw-prose-pre-bg: hsl(var(--sage3) / 1);
	--tw-prose-th-borders: hsl(var(--sage7) / 1);
	--tw-prose-td-borders: hsl(var(--sage6) / 1);
	--tw-prose-invert-body: hsl(var(--sage12) / 1);
	--tw-prose-invert-headings: hsl(var(--sage12) / 1);
	--tw-prose-invert-lead: hsl(var(--sage11) / 1);
	--tw-prose-invert-links: hsl(var(--sage12) / 1);
	--tw-prose-invert-bold: hsl(var(--sage12) / 1);
	--tw-prose-invert-counters: hsl(var(--sage11) / 1);
	--tw-prose-invert-bullets: hsl(var(--sage7) / 1);
	--tw-prose-invert-hr: hsl(var(--sage6) / 1);
	--tw-prose-invert-quotes: hsl(var(--sage12) / 1);
	--tw-prose-invert-quote-borders: hsl(var(--sage6) / 1);
	--tw-prose-invert-captions: hsl(var(--sage11) / 1);
	--tw-prose-invert-code: hsl(var(--sage12) / 1);
	--tw-prose-invert-pre-code: hsl(var(--sage12) / 1);
	--tw-prose-invert-pre-bg: hsl(var(--sage3) / 1);
	--tw-prose-invert-th-borders: hsl(var(--sage7) / 1);
	--tw-prose-invert-td-borders: hsl(var(--sage6) / 1);
}

.mx-auto {
	margin-left: auto;
	margin-right: auto;
}

.mt-4 {
	margin-top: 1rem;
}

.mt-6 {
	margin-top: 1.5rem;
}

.mt-8 {
	margin-top: 2rem;
}

.flex {
	display: flex;
}

.inline-flex {
	display: inline-flex;
}

.grid {
	display: grid;
}

.hidden {
	display: none;
}

.h-5 {
	height: 1.25rem;
}

.h-6 {
	height: 1.5rem;
}

.h-full {
	height: 100%;
}

.min-h-\[300px\] {
	min-height: 300px;
}

.w-5 {
	width: 1.25rem;
}

.w-6 {
	width: 1.5rem;
}

.w-full {
	width: 100%;
}

.max-w-4xl {
	max-width: 56rem;
}

.max-w-none {
	max-width: none;
}

.flex-1 {
	flex: 1 1 0%;
}

.select-none {
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
}

.grid-cols-1 {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-col {
	flex-direction: column;
}

.items-start {
	align-items: flex-start;
}

.items-center {
	align-items: center;
}

.justify-center {
	justify-content: center;
}

.gap-1 {
	gap: 0.25rem;
}

.gap-12 {
	gap: 3rem;
}

.gap-2 {
	gap: 0.5rem;
}

.gap-3 {
	gap: 0.75rem;
}

.gap-4 {
	gap: 1rem;
}

.gap-6 {
	gap: 1.5rem;
}

.gap-y-16 {
	row-gap: 4rem;
}

.gap-y-4 {
	row-gap: 1rem;
}

.gap-y-6 {
	row-gap: 1.5rem;
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-sage-6 > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-opacity: 1;
	border-color: hsl(var(--sage6) / var(--tw-divide-opacity));
}

.rounded-full {
	border-radius: 9999px;
}

.rounded-md {
	border-radius: 0.375rem;
}

.rounded-xl {
	border-radius: 0.75rem;
}

.border-b {
	border-bottom-width: 1px;
}

.border-t {
	border-top-width: 1px;
}

.border-sage-6 {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sage6) / var(--tw-border-opacity));
}

.bg-sage-2 {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sage2) / var(--tw-bg-opacity));
}

.bg-sand-2 {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sand2) / var(--tw-bg-opacity));
}

.bg-gradient-to-b {
	background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-grass-9 {
	--tw-gradient-from: hsl(var(--grass9) / 1) var(--tw-gradient-from-position);
	--tw-gradient-to: hsl(var(--grass9) / 0) var(--tw-gradient-to-position);
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-grass-8 {
	--tw-gradient-to: hsl(var(--grass8) / 1) var(--tw-gradient-to-position);
}

.p-2 {
	padding: 0.5rem;
}

.p-4 {
	padding: 1rem;
}

.p-6 {
	padding: 1.5rem;
}

.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}

.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}

.py-10 {
	padding-top: 2.5rem;
	padding-bottom: 2.5rem;
}

.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.py-32 {
	padding-top: 8rem;
	padding-bottom: 8rem;
}

.py-6 {
	padding-top: 1.5rem;
	padding-bottom: 1.5rem;
}

.pb-32 {
	padding-bottom: 8rem;
}

.pt-16 {
	padding-top: 4rem;
}

.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}

.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}

.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}

.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}

.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}

.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}

.font-bold {
	font-weight: 700;
}

.leading-5 {
	line-height: 1.25rem;
}

.leading-6 {
	line-height: 1.5rem;
}

.leading-\[11px\] {
	line-height: 11px;
}

.text-hi-contrast {
	color: var(--text-hi-contrast);
}

.text-lo-contrast {
	color: var(--text-lo-contrast);
}

.text-white {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}

.antialiased {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.shadow-inner {
	--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
	--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-white\/20 {
	--tw-shadow-color: rgb(255 255 255 / 0.2);
	--tw-shadow: var(--tw-shadow-colored);
}

.ring-1 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
}

.ring-2 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
}

.ring-inset {
	--tw-ring-inset: inset;
}

.ring-grass-8 {
	--tw-ring-opacity: 1;
	--tw-ring-color: hsl(var(--grass8) / var(--tw-ring-opacity));
}

.ring-sage-6 {
	--tw-ring-opacity: 1;
	--tw-ring-color: hsl(var(--sage6) / var(--tw-ring-opacity));
}

.ring-sage-7 {
	--tw-ring-opacity: 1;
	--tw-ring-color: hsl(var(--sage7) / var(--tw-ring-opacity));
}

.transition-colors {
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

@font-face {
	font-family: "Atkinson Hyperlegible";

	src: url("/public/fonts/Atkinson-Hyperlegible-Regular-102a.woff2")
		format("woff2");

	font-weight: normal;

	font-style: normal;

	font-display: swap;
}

@font-face {
	font-family: "Atkinson Hyperlegible";

	src: url("/public/fonts/Atkinson-Hyperlegible-Bold-102a.woff2")
		format("woff2");

	font-weight: bold;

	font-style: normal;

	font-display: swap;
}

:root {
	--text-hi-contrast: hsl(var(--sand12));
	--text-lo-contrast: hsl(var(--sand11));
}

.dark {
	--text-hi-contrast: #d3c6aa;
}

.selection\:bg-grass-7 *::-moz-selection {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--grass7) / var(--tw-bg-opacity));
}

.selection\:bg-grass-7 *::selection {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--grass7) / var(--tw-bg-opacity));
}

.selection\:text-hi-contrast *::-moz-selection {
	color: var(--text-hi-contrast);
}

.selection\:text-hi-contrast *::selection {
	color: var(--text-hi-contrast);
}

.selection\:bg-grass-7::-moz-selection {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--grass7) / var(--tw-bg-opacity));
}

.selection\:bg-grass-7::selection {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--grass7) / var(--tw-bg-opacity));
}

.selection\:text-hi-contrast::-moz-selection {
	color: var(--text-hi-contrast);
}

.selection\:text-hi-contrast::selection {
	color: var(--text-hi-contrast);
}

.hover\:to-grass-7:hover {
	--tw-gradient-to: hsl(var(--grass7) / 1) var(--tw-gradient-to-position);
}

.hover\:underline:hover {
	text-decoration-line: underline;
}

.hover\:ring-hi-contrast:hover {
	--tw-ring-color: var(--text-hi-contrast);
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.focus\:ring-2:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-focus-ring:focus {
	--tw-ring-color: hsl(var(--grass9));
}

.focus\:ring-hi-contrast:focus {
	--tw-ring-color: var(--text-hi-contrast);
}

.focus\:ring-offset-1:focus {
	--tw-ring-offset-width: 1px;
}

.focus\:ring-offset-white:focus {
	--tw-ring-offset-color: #fff;
}

.active\:from-grass-8:active {
	--tw-gradient-from: hsl(var(--grass8) / 1) var(--tw-gradient-from-position);
	--tw-gradient-to: hsl(var(--grass8) / 0) var(--tw-gradient-to-position);
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.active\:to-grass-9:active {
	--tw-gradient-to: hsl(var(--grass9) / 1) var(--tw-gradient-to-position);
}

.active\:ring-hi-contrast:active {
	--tw-ring-color: var(--text-hi-contrast);
}

.prose-headings\:text-hi-contrast
	:is(
		:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"] *))
	) {
	color: var(--text-hi-contrast);
}

.prose-p\:text-hi-contrast :is(:where(p):not(:where([class~="not-prose"] *))) {
	color: var(--text-hi-contrast);
}

:is(.dark .dark\:bg-sage-1) {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sage1) / var(--tw-bg-opacity));
}

:is(.dark .dark\:focus\:ring-offset-sage-1:focus) {
	--tw-ring-offset-color: hsl(var(--sage1) / 1);
}

@media (min-width: 768px) {
	.md\:grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
}

.\[\&\>div\:first-of-type\]\:pt-0 > div:first-of-type {
	padding-top: 0px;
}

.\[\&\>div\:last-of-type\]\:pb-0 > div:last-of-type {
	padding-bottom: 0px;
}

.\[\&\>div\]\:py-4 > div {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
